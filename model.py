import pandas as pd
import numpy as np
from sklearn.model_selection import ShuffleSplit, cross_val_score
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
import pickle

# Load your dataset (assuming it's in a CSV file)
data = pd.read_csv("final_embeddings.csv")

# Extract features (embedding vectors) and labels
X = data.iloc[:, 1:-1].values  # Features (embedding vectors)
y = data.iloc[:, -1].values     # Labels (1 for benign, 0 for malware)

# Standardize features by removing the mean and scaling to unit variance
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Initialize a random forest classifier
classifier = RandomForestClassifier(n_estimators=100, random_state=42)

# Define cross-validation strategy
cv = ShuffleSplit(n_splits=5, test_size=0.2, random_state=42)

# Perform cross-validation
cv_scores = cross_val_score(classifier, X_scaled, y, cv=cv)

# Print mean accuracy of cross-validation
#print("Mean Accuracy:", np.mean(cv_scores))

# Train the final model on the entire dataset
classifier.fit(X_scaled, y)

# Save the trained model to a file
pickle.dump(classifier, open("model.pkl", "wb"))
